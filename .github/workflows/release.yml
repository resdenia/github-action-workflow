name: Upload new release
on:
  release:
    types: [published]

jobs:
  build_function:
    name: Build function
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GIT }}
  upload_to_buckets:
    name: Upload to S3 buckets
    runs-on: ubuntu-latest
    needs: build_function
    strategy:
      matrix:
        aws_region:
          - 'us-east-1'
          - 'us-east-2'
          - 'us-west-1'
          - 'us-west-2'
          - 'eu-central-1'
          - 'eu-north-1'
          - 'eu-west-1'
          - 'eu-west-2'
          - 'eu-west-3'
          - 'sa-east-1'
          - 'ap-northeast-1'
          - 'ap-northeast-2'
          - 'ap-northeast-3'
          - 'ap-south-1'
          - 'ap-southeast-1'
          - 'ap-southeast-2'
          - 'ca-central-1'  
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Receive integraion
        id: integration-receiver
        run: |
          integration=$(echo "${{ github.event.release.tag_name }}" | cut -d- -f2)
          echo "integration=${integration}" >> "$GITHUB_ENV"
      - name: Receive version clean
        id: version-receiver-without
        run: |
         version=$(echo "${{ github.event.release.tag_name }}" | cut -d- -f1)
         version_without=$(echo ${version:1})
         echo "version_without=${version_without}" >> "$GITHUB_ENV"
      - name: download zip
        run: |
          if [[ "${{ env.integration }}" = "CT" ]]; then
            wget -c https://github.com/resdenia/github-action-workflow/releases/download/${{ github.event.release.tag_name }}/control_tower_${{ env.version_without }}_linux_amd64.zip -O function.zip
          else
            wget -c https://github.com/resdenia/github-action-workflow/releases/download/${{ github.event.release.tag_name }}/s3-hook_${{ env.version_without }}_linux_amd64.zip -O function.zip
          fi
        shell: bash
      - name: create new version
        run: |
          if [[ "${{ env.integration }}" = "CT" ]]; then
            cp ./control_tower/sam-template.yaml ./sam-template-${{ matrix.aws_region }}.yaml
          else
            cp ./sam-template.yaml ./sam-template-${{ matrix.aws_region }}.yaml
          fi
          sed -i "s/<<VERSION>>/${{ env.version_without }}/" "./sam-template-${{ matrix.aws_region }}.yaml"
          sed -i "s/<<REGION>>/${{ matrix.aws_region }}/" "./sam-template-${{ matrix.aws_region }}.yaml"
        shell: bash
      - name: Upload to aws
        run: |

          sudo apt-get update
          sudo apt-get install awscli
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}
          aws configure set region ${{ matrix.aws_region }}
          if [[ "${{ env.integration }}" = "CT" ]]; then
          aws s3 cp ./sam-template-${{ matrix.aws_region }}.yaml s3://tmpdata-bucket/s3-hook/control-tower/${{ env.version_without }}/sam-template.yaml --acl public-read
            aws s3 cp ./function.zip s3://tmpdata-bucket/s3-hook/control-tower/${{ env.version_without }}/function.zip --acl public-read
          else
            aws s3 cp ./sam-template-${{ matrix.aws_region }}.yaml s3://tmpdata-bucket/s3-hook/${{ env.version_without }}/sam-template.yaml --acl public-read
            aws s3 cp ./function.zip s3://tmpdata-bucket/s3-hook/${{ env.version_without }}/function.zip --acl public-read
          fi
        shell: bash
      - name: Clean
        run: |
          rm ./sam-template-${{ matrix.aws_region }}.yaml
          rm ./function.zip
